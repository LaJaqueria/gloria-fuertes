[
    {
        "id": "8547126888e8b68f",
        "type": "tab",
        "label": "JSON API",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3c10240c2e537880",
        "type": "tab",
        "label": "MQTT API",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e8b315959b701d7b",
        "type": "group",
        "z": "8547126888e8b68f",
        "name": "STATE",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7f28d16d872b74b8",
            "fd473f50f3b51608",
            "f21766f9790d97ea",
            "1e3e76623050340a",
            "dccd499fecf86a4b",
            "24b253b78a7a0609",
            "d9c5ded5c4b0d07e",
            "16b3ca1f4458d4b7",
            "5f8ba88eab9171fe",
            "c15659d93ecda454",
            "bb38f28216277023",
            "d3b8ec7017c4c189",
            "6d162ed7daed6bfd",
            "9c6bf3c28f43a6e7",
            "98ed03fb20510c3e",
            "93085d18b91e449a",
            "9500738aaef1d8ac"
        ],
        "x": 44,
        "y": 379,
        "w": 1428,
        "h": 748
    },
    {
        "id": "21d3c36381360c98",
        "type": "group",
        "z": "8547126888e8b68f",
        "name": "INFO",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "907d763c3f58256d",
            "b87e7599f64c72dc"
        ],
        "x": 74,
        "y": 1679,
        "w": 152,
        "h": 122
    },
    {
        "id": "6c6d72df65cf6029",
        "type": "group",
        "z": "8547126888e8b68f",
        "name": "EFFECTS",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0b67d7419826913c",
            "8134d3bc85bd86a5"
        ],
        "x": 74,
        "y": 1839,
        "w": 152,
        "h": 122
    },
    {
        "id": "5617361488b9b6af",
        "type": "group",
        "z": "8547126888e8b68f",
        "name": "PALETTES",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "86def6e91488522c",
            "41a67525d94fed9d"
        ],
        "x": 74,
        "y": 1999,
        "w": 172,
        "h": 122
    },
    {
        "id": "1e3e76623050340a",
        "type": "group",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "ON",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "45dbef3b29e2522c",
            "f5e2dcfa2a1efdbe",
            "2ac97d2242c5edd2",
            "0f7d40fda2867dcd",
            "941d3ef801872022",
            "fb7c6996e6f11760"
        ],
        "x": 574,
        "y": 419,
        "w": 512,
        "h": 162
    },
    {
        "id": "dccd499fecf86a4b",
        "type": "group",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "BRILLO",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "20feedd535133f62",
            "804f88f20397b5bc",
            "c586653170702612",
            "eae8df776f0797c6",
            "18def86962f63177",
            "7993e159bd8cf885"
        ],
        "x": 574,
        "y": 599,
        "w": 532,
        "h": 202
    },
    {
        "id": "d9c5ded5c4b0d07e",
        "type": "group",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "SEGMENTOS",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9080d3d8292150b7",
            "e6b49c869cfdc5c4",
            "204eaa0fe8c45c60",
            "ae8846d34d666554",
            "9671e8ee1e2dad7c",
            "7978870f4e683225",
            "25531fa04d2f43aa",
            "c8b250a9e7e28599",
            "c2e8ab761f3ae38f",
            "88e4ea03804ad804",
            "696f7274e8a285f2",
            "9b9d05bf24fd7bd7",
            "b7e557deda1acf76",
            "9690ddef717a298d"
        ],
        "x": 574,
        "y": 819,
        "w": 872,
        "h": 282
    },
    {
        "id": "463003d456c5906f",
        "type": "mqtt-broker",
        "name": "BROKER",
        "broker": "${MQTT_HOST}",
        "port": "${MQTT_PORT}",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f711ca9564506793",
        "type": "ui-base",
        "name": "Gloria Fuertes",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "navigationStyle": "default"
    },
    {
        "id": "2dca85fb898ad0bd",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "00b8c58c01dfe258",
        "type": "ui-page",
        "name": "API MQTT",
        "ui": "f711ca9564506793",
        "path": "/mqttAPI",
        "icon": "home",
        "layout": "grid",
        "theme": "2dca85fb898ad0bd",
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "6bc82c7e346ba07c",
        "type": "ui-group",
        "name": "MQTT",
        "page": "00b8c58c01dfe258",
        "width": "2",
        "height": "1",
        "order": -1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "d0345f9b7f73e9c3",
        "type": "ui-group",
        "name": "LEDs",
        "page": "00b8c58c01dfe258",
        "width": "6",
        "height": "1",
        "order": -1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "8bcce038c9fc881a",
        "type": "ui-page",
        "name": "API JSON",
        "ui": "f711ca9564506793",
        "path": "/jsonAPI",
        "icon": "home",
        "layout": "grid",
        "theme": "2dca85fb898ad0bd",
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "8a5c7a1a8df907c9",
        "type": "ui-group",
        "name": "STATE",
        "page": "8bcce038c9fc881a",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "461b3b20d919990b",
        "type": "ui-group",
        "name": "WLED",
        "page": "8bcce038c9fc881a",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c0694763ce8a9f6f",
        "type": "inject",
        "z": "8547126888e8b68f",
        "name": "WLED",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "840b8a62cf4f8340"
            ]
        ]
    },
    {
        "id": "b110d3be99f9ebfc",
        "type": "debug",
        "z": "8547126888e8b68f",
        "name": "WLED",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 160,
        "wires": []
    },
    {
        "id": "7ec285acb8b6f0ed",
        "type": "debug",
        "z": "8547126888e8b68f",
        "name": "GET WLED",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 160,
        "wires": []
    },
    {
        "id": "45dbef3b29e2522c",
        "type": "ui-switch",
        "z": "8547126888e8b68f",
        "g": "1e3e76623050340a",
        "name": "OnState",
        "label": "",
        "group": "8a5c7a1a8df907c9",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 730,
        "y": 540,
        "wires": [
            [
                "fb7c6996e6f11760"
            ]
        ]
    },
    {
        "id": "7f28d16d872b74b8",
        "type": "link in",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "STATE",
        "links": [
            "9e138f59e24649cb"
        ],
        "x": 95,
        "y": 460,
        "wires": [
            [
                "9c6bf3c28f43a6e7"
            ]
        ]
    },
    {
        "id": "98ed03fb20510c3e",
        "type": "debug",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "ON",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 420,
        "wires": []
    },
    {
        "id": "f5e2dcfa2a1efdbe",
        "type": "ui-text",
        "z": "8547126888e8b68f",
        "g": "1e3e76623050340a",
        "group": "8a5c7a1a8df907c9",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "ON",
        "label": "ON:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 740,
        "y": 460,
        "wires": []
    },
    {
        "id": "2ac97d2242c5edd2",
        "type": "ui-button",
        "z": "8547126888e8b68f",
        "g": "1e3e76623050340a",
        "group": "8a5c7a1a8df907c9",
        "name": "ToggleState",
        "label": "Toggle",
        "order": 4,
        "width": "2",
        "height": "1",
        "passthru": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "t",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 720,
        "y": 500,
        "wires": [
            [
                "fb7c6996e6f11760"
            ]
        ]
    },
    {
        "id": "0f7d40fda2867dcd",
        "type": "link in",
        "z": "8547126888e8b68f",
        "g": "1e3e76623050340a",
        "name": "on",
        "links": [
            "6d162ed7daed6bfd"
        ],
        "x": 615,
        "y": 540,
        "wires": [
            [
                "45dbef3b29e2522c"
            ]
        ]
    },
    {
        "id": "941d3ef801872022",
        "type": "link out",
        "z": "8547126888e8b68f",
        "g": "1e3e76623050340a",
        "name": "SET ON",
        "mode": "link",
        "links": [
            "bb38f28216277023"
        ],
        "x": 1045,
        "y": 520,
        "wires": []
    },
    {
        "id": "fb7c6996e6f11760",
        "type": "function",
        "z": "8547126888e8b68f",
        "g": "1e3e76623050340a",
        "name": "Set ON Request",
        "func": "const state = { ...flow.get('state') }\n\n\nstate.on = (msg.payload === 't') ? !state.on : msg.payload\n\n\nreturn { payload: state }",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 520,
        "wires": [
            [
                "941d3ef801872022"
            ]
        ]
    },
    {
        "id": "fd473f50f3b51608",
        "type": "link out",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "bri",
        "mode": "link",
        "links": [
            "804f88f20397b5bc"
        ],
        "x": 325,
        "y": 460,
        "wires": []
    },
    {
        "id": "f21766f9790d97ea",
        "type": "comment",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "State",
        "info": "",
        "x": 120,
        "y": 420,
        "wires": []
    },
    {
        "id": "907d763c3f58256d",
        "type": "comment",
        "z": "8547126888e8b68f",
        "g": "21d3c36381360c98",
        "name": "Info",
        "info": "",
        "x": 150,
        "y": 1720,
        "wires": []
    },
    {
        "id": "b87e7599f64c72dc",
        "type": "link in",
        "z": "8547126888e8b68f",
        "g": "21d3c36381360c98",
        "name": "INFO",
        "links": [
            "97bdf6d7ddd3a6ca",
            "217d2d4dd998c17e"
        ],
        "x": 125,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "0b67d7419826913c",
        "type": "comment",
        "z": "8547126888e8b68f",
        "g": "6c6d72df65cf6029",
        "name": "Effects",
        "info": "",
        "x": 150,
        "y": 1880,
        "wires": []
    },
    {
        "id": "8134d3bc85bd86a5",
        "type": "link in",
        "z": "8547126888e8b68f",
        "g": "6c6d72df65cf6029",
        "name": "EFFECTS",
        "links": [
            "42195af73b390b39"
        ],
        "x": 125,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "86def6e91488522c",
        "type": "comment",
        "z": "8547126888e8b68f",
        "g": "5617361488b9b6af",
        "name": "Palettes",
        "info": "",
        "x": 160,
        "y": 2040,
        "wires": []
    },
    {
        "id": "41a67525d94fed9d",
        "type": "link in",
        "z": "8547126888e8b68f",
        "g": "5617361488b9b6af",
        "name": "PALETTES",
        "links": [
            "1950014ab75e5d37"
        ],
        "x": 125,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "93085d18b91e449a",
        "type": "debug",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "Brillo",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 460,
        "wires": []
    },
    {
        "id": "20feedd535133f62",
        "type": "ui-text",
        "z": "8547126888e8b68f",
        "g": "dccd499fecf86a4b",
        "group": "8a5c7a1a8df907c9",
        "order": 5,
        "width": "2",
        "height": "1",
        "name": "Brillo",
        "label": "Brillo:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 740,
        "y": 640,
        "wires": []
    },
    {
        "id": "804f88f20397b5bc",
        "type": "link in",
        "z": "8547126888e8b68f",
        "g": "dccd499fecf86a4b",
        "name": "bri",
        "links": [
            "fd473f50f3b51608"
        ],
        "x": 615,
        "y": 720,
        "wires": [
            [
                "7993e159bd8cf885",
                "18def86962f63177"
            ]
        ]
    },
    {
        "id": "c586653170702612",
        "type": "link out",
        "z": "8547126888e8b68f",
        "g": "dccd499fecf86a4b",
        "name": "SET Brillo",
        "mode": "link",
        "links": [
            "bb38f28216277023"
        ],
        "x": 1065,
        "y": 700,
        "wires": []
    },
    {
        "id": "eae8df776f0797c6",
        "type": "function",
        "z": "8547126888e8b68f",
        "g": "dccd499fecf86a4b",
        "name": "Set Brillo Request",
        "func": "const state = { ...flow.get('state') }\n\nstate.bri = msg.payload\n\nreturn { payload: state }",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 700,
        "wires": [
            [
                "c586653170702612"
            ]
        ]
    },
    {
        "id": "18def86962f63177",
        "type": "ui-slider",
        "z": "8547126888e8b68f",
        "g": "dccd499fecf86a4b",
        "group": "8a5c7a1a8df907c9",
        "name": "BrilloSlide",
        "label": "",
        "tooltip": "",
        "order": 6,
        "width": "2",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "thumbLabel": true,
        "min": 0,
        "max": "255",
        "step": 1,
        "className": "",
        "x": 720,
        "y": 760,
        "wires": [
            [
                "eae8df776f0797c6",
                "7993e159bd8cf885"
            ]
        ]
    },
    {
        "id": "7993e159bd8cf885",
        "type": "ui-text-input",
        "z": "8547126888e8b68f",
        "g": "dccd499fecf86a4b",
        "group": "8a5c7a1a8df907c9",
        "name": "BrilloNum",
        "label": "",
        "order": 7,
        "width": "2",
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "number",
        "delay": 300,
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 720,
        "y": 680,
        "wires": [
            [
                "eae8df776f0797c6"
            ]
        ]
    },
    {
        "id": "24b253b78a7a0609",
        "type": "link out",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "seg",
        "mode": "link",
        "links": [
            "9080d3d8292150b7"
        ],
        "x": 325,
        "y": 500,
        "wires": []
    },
    {
        "id": "9500738aaef1d8ac",
        "type": "debug",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": " Segmentos",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 500,
        "wires": []
    },
    {
        "id": "9080d3d8292150b7",
        "type": "link in",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "name": "seg",
        "links": [
            "24b253b78a7a0609"
        ],
        "x": 615,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "e6b49c869cfdc5c4",
        "type": "ui-text",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "group": "8a5c7a1a8df907c9",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Segmentos",
        "label": "Segmentos",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 760,
        "y": 860,
        "wires": []
    },
    {
        "id": "204eaa0fe8c45c60",
        "type": "function",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "name": "Colors",
        "func": "const getColor = (/** @type {Array.<number>} */ elm) => elm.reduce((prev, cur) => prev + `${cur.toString(16).padStart(2, '0')}`, '#')\n\nconst [primary, secondary, tertiary] = (msg.payload)[0].col\n\nreturn {\n    primary: getColor(primary),\n    secondary: getColor(secondary),\n    tertiary: getColor(tertiary),\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 900,
        "wires": [
            [
                "9671e8ee1e2dad7c",
                "7978870f4e683225",
                "c2e8ab761f3ae38f"
            ]
        ]
    },
    {
        "id": "ae8846d34d666554",
        "type": "ui-text-input",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "group": "8a5c7a1a8df907c9",
        "name": "PrimaryColor",
        "label": "Primary",
        "order": 9,
        "width": 0,
        "height": 0,
        "topic": "primary",
        "topicType": "msg",
        "mode": "color",
        "delay": 300,
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 1060,
        "y": 900,
        "wires": [
            [
                "88e4ea03804ad804",
                "b7e557deda1acf76"
            ]
        ]
    },
    {
        "id": "9671e8ee1e2dad7c",
        "type": "change",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "name": "primary",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "primary",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 900,
        "wires": [
            [
                "ae8846d34d666554",
                "88e4ea03804ad804"
            ]
        ]
    },
    {
        "id": "6f28ca477914a793",
        "type": "ui-button",
        "z": "8547126888e8b68f",
        "group": "461b3b20d919990b",
        "name": "",
        "label": "Obtener Estado",
        "order": 1,
        "width": "6",
        "height": "1",
        "passthru": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 160,
        "wires": [
            [
                "840b8a62cf4f8340"
            ]
        ]
    },
    {
        "id": "7978870f4e683225",
        "type": "change",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "name": "secondary",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "secondary",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 980,
        "wires": [
            [
                "25531fa04d2f43aa",
                "9b9d05bf24fd7bd7"
            ]
        ]
    },
    {
        "id": "25531fa04d2f43aa",
        "type": "ui-text-input",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "group": "8a5c7a1a8df907c9",
        "name": "SecondaryColor",
        "label": "Secondary",
        "order": 9,
        "width": 0,
        "height": 0,
        "topic": "secondary",
        "topicType": "msg",
        "mode": "color",
        "delay": 300,
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 1070,
        "y": 980,
        "wires": [
            [
                "9b9d05bf24fd7bd7"
            ]
        ]
    },
    {
        "id": "c8b250a9e7e28599",
        "type": "ui-text-input",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "group": "8a5c7a1a8df907c9",
        "name": "TertiaryColor",
        "label": "Tertiary",
        "order": 9,
        "width": 0,
        "height": 0,
        "topic": "terciary",
        "topicType": "str",
        "mode": "color",
        "delay": 300,
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 1060,
        "y": 1060,
        "wires": [
            [
                "696f7274e8a285f2"
            ]
        ]
    },
    {
        "id": "c2e8ab761f3ae38f",
        "type": "change",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "name": "tertiary",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "tertiary",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 1060,
        "wires": [
            [
                "c8b250a9e7e28599",
                "696f7274e8a285f2"
            ]
        ]
    },
    {
        "id": "88e4ea03804ad804",
        "type": "debug",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "name": "primary",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 860,
        "wires": []
    },
    {
        "id": "9b9d05bf24fd7bd7",
        "type": "debug",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "name": "secondary",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 940,
        "wires": []
    },
    {
        "id": "696f7274e8a285f2",
        "type": "debug",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "name": "tertiary",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1020,
        "wires": []
    },
    {
        "id": "b7e557deda1acf76",
        "type": "function",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "name": "Set Brillo Request",
        "func": "const /** @type {string} */ color = msg.payload.slice(1)\n\nconst red = Number(`0x${color.slice(0, 2)}`)\nconst green = Number(`0x${color.slice(2, 4)}`)\nconst blue = Number(`0x${color.slice(4, 6)}`)\n\nconst state = flow.get('state')\n\nstate.seg[0].col[0] = [red, green, blue]\n\nreturn {\n    payload: state\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 900,
        "wires": [
            [
                "9690ddef717a298d"
            ]
        ]
    },
    {
        "id": "9690ddef717a298d",
        "type": "link out",
        "z": "8547126888e8b68f",
        "g": "d9c5ded5c4b0d07e",
        "name": "SET Color",
        "mode": "link",
        "links": [
            "bb38f28216277023"
        ],
        "x": 1405,
        "y": 900,
        "wires": []
    },
    {
        "id": "2f3a757d994b6c87",
        "type": "switch",
        "z": "8547126888e8b68f",
        "name": "Error / 200",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "c75ac69fe9efa378"
            ],
            [
                "dc37b664973a8859"
            ]
        ],
        "outputLabels": [
            "ok",
            "error"
        ]
    },
    {
        "id": "9259d065054d863b",
        "type": "function",
        "z": "8547126888e8b68f",
        "name": "Array Color to Hex Color",
        "func": "const getHexColor = (/** @type {Array<number>} */ arr) => arr.reduce((prev, curr) => prev + `${curr.toString(16).padStart(2, '0')}`, '#')\n\nconst /** @type {Array<number>} */ arrayColors = flow.get('wled').state.seg[0].col\n\nconst primary = getHexColor(arrayColors[0])\nconst secondary = getHexColor(arrayColors[1])\nconst tertiary = getHexColor(arrayColors[2])\nconst colors = { primary, secondary, tertiary }\n\nflow.set('colors', colors)\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 160,
        "wires": [
            [
                "b110d3be99f9ebfc"
            ]
        ]
    },
    {
        "id": "840b8a62cf4f8340",
        "type": "http request",
        "z": "8547126888e8b68f",
        "name": "GET WLED",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.1.200/json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 200,
        "wires": [
            [
                "2f3a757d994b6c87",
                "7ec285acb8b6f0ed"
            ]
        ]
    },
    {
        "id": "6c4d2dc073368a87",
        "type": "link in",
        "z": "8547126888e8b68f",
        "name": "GET",
        "links": [
            "d3b8ec7017c4c189"
        ],
        "x": 195,
        "y": 200,
        "wires": [
            [
                "840b8a62cf4f8340"
            ]
        ]
    },
    {
        "id": "9e138f59e24649cb",
        "type": "link out",
        "z": "8547126888e8b68f",
        "name": "STATE",
        "mode": "link",
        "links": [
            "7f28d16d872b74b8"
        ],
        "x": 855,
        "y": 200,
        "wires": []
    },
    {
        "id": "16b3ca1f4458d4b7",
        "type": "debug",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "STATE Response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 640,
        "wires": []
    },
    {
        "id": "5f8ba88eab9171fe",
        "type": "debug",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "STATE Request",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 560,
        "wires": []
    },
    {
        "id": "c15659d93ecda454",
        "type": "http request",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "POST STATE",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "192.168.1.200/json/state",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 230,
        "y": 600,
        "wires": [
            [
                "16b3ca1f4458d4b7",
                "d3b8ec7017c4c189"
            ]
        ]
    },
    {
        "id": "bb38f28216277023",
        "type": "link in",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "SET State",
        "links": [
            "941d3ef801872022",
            "9690ddef717a298d",
            "c586653170702612"
        ],
        "x": 95,
        "y": 600,
        "wires": [
            [
                "c15659d93ecda454",
                "5f8ba88eab9171fe"
            ]
        ]
    },
    {
        "id": "d3b8ec7017c4c189",
        "type": "link out",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "GET STATE",
        "mode": "link",
        "links": [
            "6c4d2dc073368a87"
        ],
        "x": 365,
        "y": 600,
        "wires": []
    },
    {
        "id": "217d2d4dd998c17e",
        "type": "link out",
        "z": "8547126888e8b68f",
        "name": "INFO",
        "mode": "link",
        "links": [
            "b87e7599f64c72dc"
        ],
        "x": 855,
        "y": 240,
        "wires": []
    },
    {
        "id": "42195af73b390b39",
        "type": "link out",
        "z": "8547126888e8b68f",
        "name": "EFFECTS",
        "mode": "link",
        "links": [
            "8134d3bc85bd86a5"
        ],
        "x": 855,
        "y": 280,
        "wires": []
    },
    {
        "id": "1950014ab75e5d37",
        "type": "link out",
        "z": "8547126888e8b68f",
        "name": "PALETTES",
        "mode": "link",
        "links": [
            "41a67525d94fed9d"
        ],
        "x": 855,
        "y": 320,
        "wires": []
    },
    {
        "id": "c690165c7d7905e7",
        "type": "catch",
        "z": "8547126888e8b68f",
        "name": "ERRORES",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 40,
        "wires": [
            [
                "671f02b2f5a984f2"
            ]
        ]
    },
    {
        "id": "671f02b2f5a984f2",
        "type": "debug",
        "z": "8547126888e8b68f",
        "name": "ERRORES",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 40,
        "wires": []
    },
    {
        "id": "1b09a470038a42ba",
        "type": "inject",
        "z": "8547126888e8b68f",
        "name": "Inicializar Variables",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "a047444f56b9c787"
            ]
        ]
    },
    {
        "id": "a047444f56b9c787",
        "type": "change",
        "z": "8547126888e8b68f",
        "name": "Set Flow Variables",
        "rules": [
            {
                "t": "set",
                "p": "wled",
                "pt": "flow",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "state",
                "pt": "flow",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "info",
                "pt": "flow",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "effects",
                "pt": "flow",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "palettes",
                "pt": "flow",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 80,
        "wires": [
            [
                "840b8a62cf4f8340"
            ]
        ]
    },
    {
        "id": "dc37b664973a8859",
        "type": "function",
        "z": "8547126888e8b68f",
        "name": "Actualizar WLED",
        "func": "const wledLocal = flow.get('wled')\nconst { state: stateLocal, effects: effectsLocal, palettes: palettesLocal } = wledLocal\n\nconst { payload: wledRemote } = msg\nconst { state: stateRemote, info: infoRemote, effects: effectsRemote, palettes: palettesRemote } = wledRemote\n// Si son iguales, no actualizo nada -> no se propaga el mensaje\nconst state = (equal(stateLocal, stateRemote)) ? null : { payload: { ...stateRemote } }\nconst effects = (equal(effectsLocal, effectsRemote)) ? null : { payload: { ...effectsRemote } }\nconst palettes = (equal(palettesLocal, palettesRemote)) ? null : { payload: { ...palettesRemote } } \n\n// Son iguales -> no mando nada\nif ([state, effects, palettes].every(el => el === null)) { return null }\n\nflow.set('wled', wledRemote)\n\n// Info siempre puede cambiar porque tiene datos como el nivel de señal wifi\nconst info = { payload: { ...infoRemote } }\n\nreturn [msg, state, info, effects, palettes]\n",
        "outputs": 5,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "equal",
                "module": "fast-deep-equal/es6"
            }
        ],
        "x": 710,
        "y": 240,
        "wires": [
            [
                "9259d065054d863b"
            ],
            [
                "9e138f59e24649cb",
                "15221eb049165757"
            ],
            [
                "217d2d4dd998c17e",
                "1605f1c2fd6fee76"
            ],
            [
                "42195af73b390b39",
                "7272e32c161a7cb9"
            ],
            [
                "1950014ab75e5d37",
                "cdfbbb9ca23abc12"
            ]
        ],
        "outputLabels": [
            "WLED",
            "state",
            "info",
            "effects",
            "palettes"
        ]
    },
    {
        "id": "c75ac69fe9efa378",
        "type": "debug",
        "z": "8547126888e8b68f",
        "name": "ERROR WLED",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 160,
        "wires": []
    },
    {
        "id": "15221eb049165757",
        "type": "debug",
        "z": "8547126888e8b68f",
        "name": "State",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 200,
        "wires": []
    },
    {
        "id": "6d162ed7daed6bfd",
        "type": "link out",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "on",
        "mode": "link",
        "links": [
            "0f7d40fda2867dcd"
        ],
        "x": 325,
        "y": 420,
        "wires": []
    },
    {
        "id": "9c6bf3c28f43a6e7",
        "type": "function",
        "z": "8547126888e8b68f",
        "g": "e8b315959b701d7b",
        "name": "on-bri-seg",
        "func": "const stateLocal = flow.get('state')\nconst { payload: stateRemote } = msg\n// Primera vez -> flow.state está vacío\nif (Object.keys(stateLocal).length === 0) {\n    // node.log('state estaba vacío')\n    flow.set('state', stateRemote)\n    const { on, bri, seg } = stateRemote\n    return [{ payload: on }, { payload: bri }, { payload: seg}]\n}\n// No cambia el state\nif (equal(stateLocal, stateRemote)) { return null }\n// Cambia el state\nconst { on: onLocal, bri: briLocal, seg: segLocal } = stateLocal\nconst { on: onRemote, bri: briRemote, seg: segRemote } = stateRemote\n// Si son iguales no las propago => son null\nconst on = equal(onLocal, onRemote) ? null : { payload: onRemote }\nconst bri = equal(briLocal, briRemote) ? null : { payload: briRemote }\nconst seg = equal(segLocal, segRemote) ? null : { payload: segRemote }\n// Actualizo el state\nflow.set('state', stateRemote)\n\nreturn [on, bri, seg]",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "equal",
                "module": "fast-deep-equal/es6"
            }
        ],
        "x": 210,
        "y": 460,
        "wires": [
            [
                "6d162ed7daed6bfd",
                "98ed03fb20510c3e"
            ],
            [
                "fd473f50f3b51608",
                "93085d18b91e449a"
            ],
            [
                "24b253b78a7a0609",
                "9500738aaef1d8ac"
            ]
        ],
        "outputLabels": [
            "on",
            "bri",
            "seg"
        ]
    },
    {
        "id": "1605f1c2fd6fee76",
        "type": "debug",
        "z": "8547126888e8b68f",
        "name": "Info",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 240,
        "wires": []
    },
    {
        "id": "7272e32c161a7cb9",
        "type": "debug",
        "z": "8547126888e8b68f",
        "name": "Effects",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 280,
        "wires": []
    },
    {
        "id": "cdfbbb9ca23abc12",
        "type": "debug",
        "z": "8547126888e8b68f",
        "name": "Palettes",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 320,
        "wires": []
    },
    {
        "id": "f7f46f00ec761812",
        "type": "mqtt in",
        "z": "3c10240c2e537880",
        "name": "MQTT RX",
        "topic": "wled/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "463003d456c5906f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 260,
        "wires": [
            [
                "e65b78d88883a4c6",
                "f07dd4939fc388b6"
            ]
        ]
    },
    {
        "id": "3ba09d6ebc617a58",
        "type": "status",
        "z": "3c10240c2e537880",
        "name": "MQTT Status",
        "scope": [
            "f7f46f00ec761812",
            "97131f544fedf1f5"
        ],
        "x": 110,
        "y": 120,
        "wires": [
            [
                "0279d9ece28ab5e4",
                "faa01f8e5f82d57d"
            ]
        ]
    },
    {
        "id": "0279d9ece28ab5e4",
        "type": "debug",
        "z": "3c10240c2e537880",
        "name": "MQTT status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 110,
        "y": 80,
        "wires": []
    },
    {
        "id": "84f8a5abace79c6e",
        "type": "ui-led",
        "z": "3c10240c2e537880",
        "name": "MQTT RX Connection",
        "group": "6bc82c7e346ba07c",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "RX",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "states": [
            {
                "value": "red",
                "valueType": "str",
                "color": "#ff0000"
            },
            {
                "value": "green",
                "valueType": "str",
                "color": "#00ff00"
            },
            {
                "value": "orange",
                "valueType": "str",
                "color": "#ff7800"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showBorder": true,
        "showGlow": true,
        "x": 680,
        "y": 100,
        "wires": []
    },
    {
        "id": "faa01f8e5f82d57d",
        "type": "function",
        "z": "3c10240c2e537880",
        "name": "MQTT connection",
        "func": "const /** @type {String}*/ status = msg.status.text\n\nif (status.includes('connected')) return { ...msg, payload: 'green' }\nif (status.includes('connecting')) return { ...msg, payload: 'orange' }\nreturn { ...msg, payload: 'red' }",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 120,
        "wires": [
            [
                "7e692d496a09c293"
            ]
        ]
    },
    {
        "id": "f07dd4939fc388b6",
        "type": "switch",
        "z": "3c10240c2e537880",
        "name": "Topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "wled/6cb64c/status",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wled/6cb64c/g",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wled/6cb64c/c",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wled/6cb64c/v",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "3e250a4b5caa3440"
            ],
            [
                "24762828a8f88821"
            ],
            [
                "dc53b54b922f1acc"
            ],
            [
                "defbc31fd6446b4a"
            ],
            [
                "ee354eb8372b93c0"
            ]
        ],
        "outputLabels": [
            "status",
            "brillo",
            "color",
            "XML API",
            "otro"
        ]
    },
    {
        "id": "e65b78d88883a4c6",
        "type": "debug",
        "z": "3c10240c2e537880",
        "name": "MQTT RX",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "{\t    \"topic\": msg.topic,\t    \"payload\": msg.payload\t}",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 100,
        "y": 220,
        "wires": []
    },
    {
        "id": "670e7422911c78dd",
        "type": "ui-led",
        "z": "3c10240c2e537880",
        "name": "MQTT TX Connection",
        "group": "6bc82c7e346ba07c",
        "order": 3,
        "width": "0",
        "height": "0",
        "label": "TX",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "states": [
            {
                "value": "red",
                "valueType": "str",
                "color": "#ff0000"
            },
            {
                "value": "green",
                "valueType": "str",
                "color": "#00ff00"
            },
            {
                "value": "orange",
                "valueType": "str",
                "color": "#ff7800"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showBorder": true,
        "showGlow": true,
        "x": 680,
        "y": 140,
        "wires": []
    },
    {
        "id": "7e692d496a09c293",
        "type": "switch",
        "z": "3c10240c2e537880",
        "name": "",
        "property": "status.source.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "mqtt in",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mqtt out",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 120,
        "wires": [
            [
                "84f8a5abace79c6e"
            ],
            [
                "670e7422911c78dd"
            ]
        ]
    },
    {
        "id": "97131f544fedf1f5",
        "type": "mqtt out",
        "z": "3c10240c2e537880",
        "name": "MQTT TX",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "463003d456c5906f",
        "x": 500,
        "y": 520,
        "wires": []
    },
    {
        "id": "3e250a4b5caa3440",
        "type": "ui-led",
        "z": "3c10240c2e537880",
        "name": "MQTT LEDs",
        "group": "6bc82c7e346ba07c",
        "order": 1,
        "width": "0",
        "height": "0",
        "label": "LEDs",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "states": [
            {
                "value": "offline",
                "valueType": "str",
                "color": "#ff0000"
            },
            {
                "value": "online",
                "valueType": "str",
                "color": "#00ff00"
            },
            {
                "value": "disconnecting",
                "valueType": "str",
                "color": "#ff7800"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showBorder": true,
        "showGlow": true,
        "x": 430,
        "y": 200,
        "wires": []
    },
    {
        "id": "defbc31fd6446b4a",
        "type": "xml",
        "z": "3c10240c2e537880",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 410,
        "y": 320,
        "wires": [
            [
                "79a6766096d0f3eb"
            ]
        ]
    },
    {
        "id": "2cc91e4def35195f",
        "type": "ui-text-input",
        "z": "3c10240c2e537880",
        "group": "d0345f9b7f73e9c3",
        "name": "XML API",
        "label": "API",
        "order": 6,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "mode": "textarea",
        "delay": 300,
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": false,
        "className": "",
        "x": 700,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "24762828a8f88821",
        "type": "ui-text",
        "z": "3c10240c2e537880",
        "group": "d0345f9b7f73e9c3",
        "order": 2,
        "width": "3",
        "height": "1",
        "name": "BrilloRX",
        "label": "Brillo",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 420,
        "y": 240,
        "wires": []
    },
    {
        "id": "dc53b54b922f1acc",
        "type": "ui-text",
        "z": "3c10240c2e537880",
        "group": "d0345f9b7f73e9c3",
        "order": 4,
        "width": "3",
        "height": "1",
        "name": "ColorRX",
        "label": "Color",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 420,
        "y": 280,
        "wires": []
    },
    {
        "id": "a8c832bf5365c17c",
        "type": "ui-text-input",
        "z": "3c10240c2e537880",
        "group": "d0345f9b7f73e9c3",
        "name": "Topic-PayloadRX",
        "label": "Otra info",
        "order": 5,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "mode": "textarea",
        "delay": 300,
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 790,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "ee354eb8372b93c0",
        "type": "function",
        "z": "3c10240c2e537880",
        "name": "Topic-Payload",
        "func": "\nreturn { payload: `Topic: ${msg.topic}\\nPayload: ${msg.payload}`}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 360,
        "wires": [
            [
                "f4cfaa1d67706ea8"
            ]
        ]
    },
    {
        "id": "f4cfaa1d67706ea8",
        "type": "json",
        "z": "3c10240c2e537880",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 610,
        "y": 360,
        "wires": [
            [
                "a8c832bf5365c17c"
            ]
        ]
    },
    {
        "id": "c7740c7c981d6a87",
        "type": "change",
        "z": "3c10240c2e537880",
        "name": "Brillo",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "wled/6cb64c",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "97131f544fedf1f5",
                "4e1871a55b77d548"
            ]
        ]
    },
    {
        "id": "2fb2b81a2aeb6f01",
        "type": "ui-text-input",
        "z": "3c10240c2e537880",
        "group": "d0345f9b7f73e9c3",
        "name": "BrilloTX",
        "label": "Brillo TX",
        "order": 1,
        "width": "3",
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "number",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 200,
        "y": 500,
        "wires": [
            [
                "c7740c7c981d6a87"
            ]
        ]
    },
    {
        "id": "aad5324e42dcbe35",
        "type": "template",
        "z": "3c10240c2e537880",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 670,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "2de1f9d246a09baf",
        "type": "ui-template",
        "z": "3c10240c2e537880",
        "group": "d0345f9b7f73e9c3",
        "page": "",
        "ui": "",
        "name": "API Formated",
        "order": 7,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <span></span>\n</template>\n\n<script>\n    export default {\n        data() {\n            // define variables available component-wide\n            // (in <template> and component functions)\n            return {\n                api: \"\"\n            }\n        },\n        watch: {\n            // watch for any changes of \"count\"\n            msg: function () {\n                // if (this.count % 5 === 0) {\n                //     this.send({payload: 'Multiple of 5'})\n                // }\n                this.api = msg.payload\n                // this.$refs.api.$el.value = msg.payload \n            }\n        },\n        computed: {\n            // automatically compute this variable\n            // whenever VueJS deems appropriate\n            // formattedCount: function () {\n            //     return this.count + 'Apples'\n            // }\n        },\n        methods: {\n            // expose a method to our <template> and Vue Application\n            // increase: function () {\n            //     this.count++\n            // }\n        },\n        mounted() {\n            // code here when the component is first loaded\n        },\n        unmounted() {\n            // code here when the component is removed from the Dashboard\n            // i.e. when the user navigates away from the page\n        }\n    }\n</script>\n<style>\n    /* define any styles here - supports raw CSS */\n    textarea {\n        field-sizing: content;\n    }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 720,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "79a6766096d0f3eb",
        "type": "yaml",
        "z": "3c10240c2e537880",
        "property": "payload",
        "name": "",
        "x": 550,
        "y": 320,
        "wires": [
            [
                "2cc91e4def35195f",
                "2de1f9d246a09baf",
                "0244fa258298b96c"
            ]
        ]
    },
    {
        "id": "0244fa258298b96c",
        "type": "file",
        "z": "3c10240c2e537880",
        "name": "",
        "filename": "/data/wled-api.yml",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 730,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "ed2939c2019053ca",
        "type": "change",
        "z": "3c10240c2e537880",
        "name": "Color",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "wled/6cb64c/c",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 540,
        "wires": [
            [
                "97131f544fedf1f5",
                "4e1871a55b77d548"
            ]
        ]
    },
    {
        "id": "08706f80fcfb529a",
        "type": "ui-text-input",
        "z": "3c10240c2e537880",
        "group": "d0345f9b7f73e9c3",
        "name": "ColorTX",
        "label": "Color TX",
        "order": 3,
        "width": "3",
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "color",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 200,
        "y": 540,
        "wires": [
            [
                "ed2939c2019053ca"
            ]
        ]
    },
    {
        "id": "4e1871a55b77d548",
        "type": "debug",
        "z": "3c10240c2e537880",
        "name": "MQTT TX",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "{\t    \"topic\": msg.topic,\t    \"payload\": msg.payload\t}",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 480,
        "wires": []
    },
    {
        "id": "ecb955f54d6343aa",
        "type": "inject",
        "z": "3c10240c2e537880",
        "name": "API",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"state\":{\"on\":false}}",
        "payloadType": "json",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "7a561c231c48e1cc"
            ]
        ]
    },
    {
        "id": "7a561c231c48e1cc",
        "type": "change",
        "z": "3c10240c2e537880",
        "name": "API",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "wled/6cb64c/api",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 580,
        "wires": [
            [
                "97131f544fedf1f5",
                "4e1871a55b77d548"
            ]
        ]
    }
]